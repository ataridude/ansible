version: '3.8'
networks:
  traefik_net:
    name: traefik_net
    driver: overlay
    attachable: true
services:
  traefik:
    image: traefik:v2.5
    command:
      - --api.insecure=true
      - --entrypoints.http
      - --entrypoints.http.address=:80
      - --entrypoints.https
      - --entrypoints.https.address=:443
      - --entrypoints.http.forwardedHeaders.insecure
      - --entrypoints.https.forwardedHeaders.insecure
      - --log
      - --log.format=json
      - --log.level=info
      - --ping
      - --ping.entrypoint=traefik
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik_net
      - --providers.docker.swarmMode=true
      - --providers.docker.watch=true
      - --entrypoints.https.http.tls.certresolver=dns-digitalocean
      - --certificatesresolvers.dns-digitalocean.acme.dnschallenge=true
      - --certificatesresolvers.dns-digitalocean.acme.dnschallenge.provider=digitalocean
      - --certificatesresolvers.dns-digitalocean.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.dns-digitalocean.acme.email={{ do_acme_email }}
      - --certificatesresolvers.dns-digitalocean.acme.caserver=https://{{ acme_caserver }}.api.letsencrypt.org/directory
      - --certificatesresolvers.dns-digitalocean.acme.storage=/letsencrypt/acme.json
      - --serverstransport.insecureskipverify=true
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: /usr/local/docker/letsencrypt
        target: /letsencrypt
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    environment:
      # $DO_AUTH_TOKEN comes from shell environment
      - DO_AUTH_TOKEN={{ do_auth_token }}
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5
        window: 20s
      update_config:
        failure_action: pause
        monitor: 30s
        order: stop-first
      labels:
        - traefik.enable=false
    networks:
      - traefik_net
